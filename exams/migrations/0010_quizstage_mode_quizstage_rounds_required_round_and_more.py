# Generated by Django 5.2.6 on 2025-09-16 18:17

import django.core.validators
import django.db.models.constraints
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0009_quizstage_is_negative_makring'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='quizstage',
            name='mode',
            field=models.CharField(choices=[('INDIVIDUAL', 'Individual'), ('TEAM', 'Team')], default='INDIVIDUAL', max_length=12),
        ),
        migrations.AddField(
            model_name='quizstage',
            name='rounds_required',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=1)),
                ('fixed_order', models.BooleanField(default=True)),
                ('is_option', models.BooleanField(default=False)),
                ('is_buzzer', models.BooleanField(default=True)),
                ('kind', models.CharField(choices=[('NORMAL_QA', 'Normal Q&A'), ('AUDIO', 'Audio Based'), ('VIDEO', 'Video Based'), ('BUZZER', 'Buzzer'), ('RAPID_FIRE', 'Rapid Fire'), ('FASTEST_FINGER', 'Fastest Finger')], db_index=True, default='NORMAL_QA', max_length=20)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(3600)])),
                ('question_count', models.PositiveIntegerField(blank=True, null=True)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rounds', to='exams.quizstage')),
            ],
            options={
                'ordering': ('stage', 'order', 'created_at'),
            },
        ),
        migrations.CreateModel(
            name='RoundAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('STARTED', 'Started'), ('SUBMITTED', 'Submitted')], default='STARTED', max_length=16)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken_seconds', models.PositiveIntegerField(default=0)),
                ('total_marks', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('obtained_marks', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='exams.round')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='round_attempts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoundQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveIntegerField(default=1)),
                ('marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('negative_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('time_limit_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('prompt_image', models.ImageField(blank=True, null=True, upload_to='quiz/round_prompts/images/')),
                ('prompt_audio', models.FileField(blank=True, null=True, upload_to='quiz/round_prompts/audio/')),
                ('prompt_video', models.FileField(blank=True, null=True, upload_to='quiz/round_prompts/video/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('autoplay_media', models.BooleanField(default=True)),
                ('media_start_ms', models.PositiveIntegerField(default=0)),
                ('media_duration_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_rounds', to='exams.question')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_questions', to='exams.round')),
            ],
            options={
                'ordering': ('round', 'order', 'created_at'),
            },
        ),
        migrations.CreateModel(
            name='RoundOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(blank=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='quiz/round_options/images/')),
                ('audio', models.FileField(blank=True, null=True, upload_to='quiz/round_options/audio/')),
                ('video', models.FileField(blank=True, null=True, upload_to='quiz/round_options/video/')),
                ('base_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='round_overrides', to='exams.questionoption')),
                ('round_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='exams.roundquestion')),
            ],
            options={
                'ordering': ('round_question', 'order', 'created_at'),
            },
        ),
        migrations.CreateModel(
            name='RoundAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answer_text', models.TextField(blank=True)),
                ('answer_number', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('answer_bool', models.BooleanField(blank=True, null=True)),
                ('responded_ms', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CORRECT', 'Correct'), ('WRONG', 'Wrong')], default='PENDING', max_length=16)),
                ('awarded_marks', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('time_spent_seconds', models.PositiveIntegerField(default=0)),
                ('order', models.PositiveIntegerField(default=0)),
                ('final', models.BooleanField(default=True)),
                ('selected_base_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chosen_in_round', to='exams.questionoption')),
                ('round_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exams.roundattempt')),
                ('selected_round_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chosen_in', to='exams.roundoption')),
                ('round_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exams.roundquestion')),
            ],
        ),
        migrations.CreateModel(
            name='BuzzerAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buzzed_at', models.DateTimeField(auto_now_add=True)),
                ('reaction_ms', models.PositiveIntegerField(default=0)),
                ('accepted', models.BooleanField(default=True)),
                ('penalty_applied', models.BooleanField(default=False)),
                ('round_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buzzer_attempts', to='exams.roundattempt')),
                ('round_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buzzer_attempts', to='exams.roundquestion')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('code', models.CharField(blank=True, db_index=True, max_length=32)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teams_created', to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='exams.quiz')),
            ],
        ),
        migrations.AddField(
            model_name='roundattempt',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='round_attempts', to='exams.team'),
        ),
        migrations.CreateModel(
            name='RoundAdmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rule_code', models.CharField(blank=True, max_length=32)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('admitted_at', models.DateTimeField(auto_now_add=True)),
                ('granted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_round_admissions', to=settings.AUTH_USER_MODEL)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admissions', to='exams.round')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_admissions', to='exams.team')),
            ],
            options={
                'ordering': ('-admitted_at', 'round_id', 'team_id'),
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_captain', models.BooleanField(default=False)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='exams.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='round',
            index=models.Index(fields=['stage', 'order'], name='exams_round_stage_i_a3201a_idx'),
        ),
        migrations.AddIndex(
            model_name='round',
            index=models.Index(fields=['kind'], name='exams_round_kind_dc8c55_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='round',
            unique_together={('stage', 'order')},
        ),
        migrations.AddIndex(
            model_name='roundquestion',
            index=models.Index(fields=['round', 'order'], name='exams_round_round_i_94e243_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roundquestion',
            unique_together={('round', 'question')},
        ),
        migrations.AddIndex(
            model_name='roundoption',
            index=models.Index(fields=['round_question', 'order'], name='exams_round_round_q_877ad4_idx'),
        ),
        migrations.AddIndex(
            model_name='roundanswer',
            index=models.Index(fields=['round_attempt', 'round_question'], name='exams_round_round_a_3336e5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='roundanswer',
            unique_together={('round_attempt', 'round_question')},
        ),
        migrations.AddIndex(
            model_name='buzzerattempt',
            index=models.Index(fields=['round_attempt', 'round_question'], name='exams_buzze_round_a_710f20_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='buzzerattempt',
            unique_together={('round_attempt', 'round_question')},
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['quiz', 'name'], name='exams_team_quiz_id_fc2140_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['quiz', 'code'], name='exams_team_quiz_id_697b3b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('quiz', 'name')},
        ),
        migrations.AddIndex(
            model_name='roundattempt',
            index=models.Index(fields=['round', 'status'], name='exams_round_round_i_c062a3_idx'),
        ),
        migrations.AddIndex(
            model_name='roundattempt',
            index=models.Index(fields=['percent'], name='exams_round_percent_c08067_idx'),
        ),
        migrations.AddIndex(
            model_name='roundattempt',
            index=models.Index(fields=['round', 'team'], name='exams_round_round_i_773a8c_idx'),
        ),
        migrations.AddIndex(
            model_name='roundattempt',
            index=models.Index(fields=['round', 'user'], name='exams_round_round_i_c66f55_idx'),
        ),
        migrations.AddConstraint(
            model_name='roundattempt',
            constraint=models.UniqueConstraint(condition=models.Q(('team__isnull', False)), fields=('round', 'team'), name='uq_round_attempt_round_team'),
        ),
        migrations.AddConstraint(
            model_name='roundattempt',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('round', 'user'), name='uq_round_attempt_round_user'),
        ),
        migrations.AddConstraint(
            model_name='roundattempt',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('team__isnull', False), ('user__isnull', True)), models.Q(('team__isnull', True), ('user__isnull', False)), _connector='OR'), name='ck_round_attempt_exactly_one_actor'),
        ),
        migrations.AddIndex(
            model_name='roundadmission',
            index=models.Index(fields=['round', 'team'], name='exams_round_round_i_f57bc1_idx'),
        ),
        migrations.AddConstraint(
            model_name='roundadmission',
            constraint=models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['IMMEDIATE'], fields=('round', 'team'), name='uq_round_admission_round_team'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['team', 'user'], name='exams_teamm_team_id_afc170_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teammember',
            unique_together={('team', 'user')},
        ),
    ]
